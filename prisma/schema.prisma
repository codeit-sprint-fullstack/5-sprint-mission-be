// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// model User {
//   id       String @id @default(uuid())
//   email    String @unique
//   password String
//   Product  Product[]
//   Article  Article[]
//   Comment  Comment[]
// }

model Product {
  id          String   @id @default(uuid())
  // userId      String   @default("Anonymous")
  name        String
  description String
  price       Float // Int 말고?
  tags        String[]
  images      String[]
  favorite    Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  // user        User     @relation(fields: [userId], references: [id], onDelete: SetDefault)
}

model Article {
  id        String   @id @default(uuid())
  // userId    String    @default("Anonymous")
  title     String
  content   String
  images    String[]
  favorite  Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  // user      User      @relation(fields: [userId], references: [id], onDelete: SetDefault)
}

model Comment {
  id         String     @id @default(uuid())
  // userId    String   @default("Anonymous")
  targetId   String
  targetType TargetType
  content    String
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  // user      User     @relation(fields: [userId], references: [id], onDelete: SetDefault)
}

enum TargetType {
  PRODUCT
  ARTICLE
  COMMENT
}
